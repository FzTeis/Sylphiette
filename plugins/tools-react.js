let handler = async (m, { args, text, command, conn }) => {
    if (!args[0]) {
        return m.reply(`üå± Ejemplo de uso :\n${command} https://whatsapp.com/channel/.... Hola`);
    }

    if (!args[0].startsWith("https://whatsapp.com/channel/")) {
        return m.reply("No es un enlace v√°lido.");
    }

    const hurufGaya = {
        a: 'üÖê', b: 'üÖë', c: 'üÖí', d: 'üÖì', e: 'üÖî', f: 'üÖï', g: 'üÖñ',
        h: 'üÖó', i: 'üÖò', j: 'üÖô', k: 'üÖö', l: 'üÖõ', m: 'üÖú', n: 'üÖù',
        o: 'üÖû', p: 'üÖü', q: 'üÖ†', r: 'üÖ°', s: 'üÖ¢', t: 'üÖ£', u: 'üÖ§',
        v: 'üÖ•', w: 'üÖ¶', x: 'üÖß', y: 'üÖ®', z: 'üÖ©',
        '0': '‚ìø', '1': '‚ûä', '2': '‚ûã', '3': '‚ûå', '4': '‚ûç',
        '5': '‚ûé', '6': '‚ûè', '7': '‚ûê', '8': '‚ûë', '9': '‚ûí'
    };

    const emojiInput = args.slice(1).join(' ').toLowerCase();
    const emoji = emojiInput.split('').map(c => {
        if (c === ' ') return '‚Äï';
        return hurufGaya[c] || c;
    }).join('');

    try {
        const link = args[0];
        const channelId = link.split('/')[4];
        const messageId = link.split('/')[5];

        const res = await conn.newsletterMetadata("invite", channelId);
        await conn.newsletterReactMessage(res.id, messageId, emoji);

        return m.reply(`Se envi√≥ exitosamente la reacci√≥n *${emoji}* al mensaje en el canal *${res.name}*.`);
    } catch (e) {
        console.error(e);
        return m.reply("No se pudo enviar la reacci√≥n. Aseg√∫rese de que el enlace y el texto sean v√°lidos: " + e);
    }
};
handler.help = handler.command = ["react"]
handler.tags = ["tools"]
export default handler